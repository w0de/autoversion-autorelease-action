name: autoversion & autorelease

on:
  workflow_call:
    inputs:
      artifacts:
        description: An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
        required: false
        type: string
      artifacts_content_type:
        description: The content type of the artifacts. Defaults to raw.
        required: false
        type: string
        default: raw
      bump_from_branch_name:
        description: Adjust semantic version bump based on branch name prefix. Branches prefixed with "patch/", "minor/", or "major/" will adjust version bump.
        required: false
        default: false
        type: boolean
      commit_sha:
        description: The commit SHA value to add the tag. If specified, it uses this value instead GITHUB_SHA. It could be useful when a previous step merged a branch into github.ref.
        required: false
        type: string
      default_bump:
        description: Can be patch, minor or major.
        required: false
        default: patch
        type: string
      draft_pre_releases:
        description: Create draft releases for prerelease branches.
        required: false
        default: true
        type: boolean
      dry_run:
        description: Output putative new tag to log. Do not apply tag or create release.
        required: false
        default: false
        type: boolean
      name:
        description: Override default release with this custom value.
        required: false
        type: string
      release_branches:
        description: Comma separated list of branches (JavaScript regular expression accepted) that will generate the release tags.
        required: false
        default: main
        type: string
      skip_pre_releases:
        description: Do not create releases for prerelease branches. Overrides draftPrereleases.
        required: false
        default: true
        type: boolean

    outputs:
      # mathieudutour/github-tag-action
      changelog:
        description: The conventional changelog since the previous tag.
        value: ${{ jobs.autorelease.outputs.changelog }}
      new_version:
        description: The auto-bumped version.
        value: ${{ jobs.autorelease.outputs.new_version }}
      new_tag:
        description: The auto-bumped version tag.
        value: ${{ jobs.autorelease.outputs.new_tag }}
      previous_tag:
        description: The previous version tag.
        value: ${{ jobs.autorelease.outputs.previous_tag }}
      previous_version:
        description: The previous version.
        value: ${{ jobs.autorelease.outputs.previous_version }}
      release_type:
        description: The auto-bumped versions release type.
        value: ${{ jobs.autorelease.outputs.release_type }}

      # ncipollo/release-action
      artifact_upload_url:
        description: The URL for uploading assets to the release.
        value: ${{ jobs.autorelease.outputs.artifact_upload_url }}
      release_id:
        description: The identifier of the created release.
        value: ${{ jobs.autorelease.outputs.release_id }}
      release_url:
        description: The HTML URL of the release.
        value: ${{ jobs.autorelease.outputs.release_url }}


jobs:
  autorelease:
    runs-on: ubuntu-latest

    outputs:
      changelog: ${{ steps.version.outputs.changelog }}
      new_version: ${{ steps.version.outputs.new_version }}
      new_tag: ${{ steps.version.outputs.new_tag }}
      release_type: ${{ steps.version.outputs.release_type }}
      artifact_upload_url: ${{ steps.release.outputs.upload_url }}
      release_id: ${{ steps.release.outputs.id }}
      release_url: ${{ steps.release.outputs.html_url }}

    steps:
      - name: checkout
        uses: actions/checkout@v4  # trusting github's internally developed action (not trusting others, so pinning at sha)

      - name: version
        id: version
        uses: mathieudutour/github-tag-action@a22cf08638b34d5badda920f9daf6e72c477b07b  # v6.2
        with:
          # opinionated
          create_annotated_tag: true
          pre_release_branches: .*
          tag_prefix: v
          # exposed
          commit_sha: ${{ inputs.commit_sha }}
          default_bump: ${{ inputs.default_bump }}
          dry_run: ${{ inputs.dry_run }}
          github_token: ${{ github.token }}
          release_branches: ${{ inputs.release_branches }}
          # calculated
          default_prerelease_bump: pre${{ inputs.default_bump }}

      - name: debug
        run: echo "${{ steps.version.outputs.release_type }}"

      - name: release
        id: release
        if: ${{ !(inputs.dry_run || (contains(steps.version.outputs.release_type, 'pre') && inputs.skip_pre_releases)) }}
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5  # v1.14.0
        with:
          # opinionated
          allowUpdates: true
          generateReleaseNotes: true
          omitBodyDuringUpdate: false
          omitDraftDuringUpdate: false
          omitNameDuringUpdate: false
          omitPrereleaseDuringUpdate: false
          removeArtifacts: true
          replacesArtifacts: true
          skipIfReleaseExists: false
          updateOnlyUnreleased: true
          # exposed
          artifacts: ${{ inputs.artifacts }}
          artifactContentType: ${{ inputs.artifacts_content_type }}
          commit: ${{ inputs.commit_sha }}
          draft: ${{ contains(steps.version.outputs.release_type, 'pre') && inputs.draft_pre_releases }}
          name: ${{ inputs.name || steps.version.outputs.new_version }}
          token: ${{ github.token }}
          # calculated
          artifactErrorsFailBuild: ${{ contains(steps.version.outputs.release_type, 'pre') }} # prereleases can fail their artifact upload
          body: ${{ steps.version.outputs.changelog }}
          makeLatest: ${{ contains(steps.version.outputs.release_type, 'pre') }} # releases are always latest, prerelease are always not
          prerelease: ${{ contains(steps.version.outputs.release_type, 'pre') }} # {pre_}release_branches inputs determine if this is a prerelease
          tag: ${{ steps.version.outputs.new_tag }}

